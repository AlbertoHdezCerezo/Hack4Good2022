version: 2.1

# Definition of environments where jobs will be executed
executors:
  ruby:
    # Jobs will be run in a docker container
    docker:
      # Ruby + Node
      - image: cimg/ruby:3.1.2-node
        # Reference: https://circleci.com/docs/language-ruby
        environment:
          PARALLEL_WORKERS: "1"
          # Bundler Configuration
          # ---------------------
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          # Disable changes in Gemfile
          BUNDLE_FROZEN: true
          # Rails environment Configuration
          # -------------------------------
          RAILS_ENV: test

  # Ruby environment
  ruby-on-rails:
    # Jobs will be run in a docker container
    docker:
      # Ruby + Node + Selenium environment (ideal for testing)
      - image: cimg/ruby:3.1.2-browsers
        # Reference: https://circleci.com/docs/language-ruby
        environment:
          PARALLEL_WORKERS: "1"
          # Bundler Configuration
          # ---------------------
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          # Disable changes in Gemfile
          BUNDLE_FROZEN: true
          # Database Configuration
          # ----------------------
          PGHOST: 127.0.0.1
          PGUSER: albert-ci
          PGPASSWORD: ""
          # Rails environment Configuration
          # -------------------------------
          RAILS_ENV: test

      - image: cimg/postgres:13.4
        environment:
          POSTGRES_USER: albert-ci
          POSTGRES_DB: Albert_test
          POSTGRES_PASSWORD: ""

commands:
  restore-npm-cache:
    description: |
      Restore NPM packages from cache, so the setup script can make use of them.
      - Requires project to be checked out
    steps:
      - restore_cache:
          name: Restore npm packages cache
          keys:
            - yarn-cache-v4-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-cache-v4-{{ .Branch }}
            - yarn-cache-v4-

  refresh-npm-cache:
    description: |
      Update NPM cache with latest installed packages.
      - Requires project to be checked out
    steps:
      - save_cache:
          name: Save installed npm packages in cache
          key: yarn-cache-v4-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - .yarn/cache
            - .yarn/unplugged

  restore-gems-cache:
    description: |
      Restore Ruby gems from cache, so the setup script can make use of them.
      - Requires project to be checked out.
      - Requires bundle to be installed.
    steps:
      - restore_cache:
          name: Restore gems cache
          keys:
            - gem-cache-v4-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - gem-cache-v4-{{ .Branch }}
            - gem-cache-v4-

  refresh-gems-cache:
    description: |
      Update Ruby gems cache with latest installed gems.
      - Requires project to be checked out.
      - Requires bundle to be installed.
    steps:
      - save_cache:
          name: Save installed gems in cache
          paths:
            - vendor/bundle
          key: gem-cache-v4-{{ .Branch }}-{{ checksum "Gemfile.lock" }}

  compile-assets:
    description: |
      Compiles JS & CSS project assets in production mode
      - Requires project to be checked out.
      - Requires project gems to be installed.
    steps:
      - run:
          name: Compile assets
          command: RAILS_ENV=production bundle exec rails assets:precompile
      - persist_to_workspace:
          root: ~/app
          paths:
            - ./public/assets

jobs:
  ci-pipeline-tests:
    working_directory: ~/app
    executor: ruby-on-rails
    steps:
      - checkout
      - restore-npm-cache
      - restore-gems-cache
      - run:
          name: Run Set-Up Script
          command: bin/setup
      - refresh-gems-cache
      - refresh-gems-cache
      - run:
          name: Run Test Suite
          command: bin/ci-tests

  ci-pipeline-linter:
    working_directory: ~/app
    executor: ruby
    steps:
      - checkout
      - restore-gems-cache
      - run:
          name: Run Linters
          command: bin/ci-linter

  ci-pipeline-audits:
    working_directory: ~/app
    executor: ruby
    steps:
      - checkout
      - restore-gems-cache
      - run:
          name: Run Audits
          command: bin/ci-audits

  ci-pipeline-bundler:
    working_directory: ~/app
    executor: ruby
    steps:
      - checkout
      - restore-gems-cache
      - restore-npm-cache
      - compile-assets
      - run:
          name: Run Bundle Monitors
          command: bin/ci-bundler

# Definition of workflows
workflows:
  # Run all application validations
  run_tests:
    jobs:
      - ci-pipeline-tests
      - ci-pipeline-linter:
          requires:
            - ci-pipeline-tests
      - ci-pipeline-bundler:
          requires:
            - ci-pipeline-tests
      - ci-pipeline-audits:
          requires:
            - ci-pipeline-tests